name: Unit Tests & Code Coverage

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:   # allow manual triggering

defaults:
  run:
    shell: bash -l {0}

jobs:

  lint:
    name: Code style
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8
        run: flake8

      - name: Run black
        uses: rickstaa/action-black@v1
        with:
          black_args: ". --check"

  test-matrix:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        python-version:
          # - "3.12"  # not yet
          - "3.11"
          - "3.10"
          - "3.9"
          - "3.8"
      max-parallel: 5

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v3

    # TODO: Why is this needed?  What is missing from env.yml?
    - name: Install libGL.so.1
      run: |
        DEBIAN_FRONTEND=noninteractive apt-get update -y
        DEBIAN_FRONTEND=noninteractive apt-get install -y libgl1

    - name: Create Python ${{ matrix.python-version }} environment
      uses: mamba-org/setup-micromamba@v1
      with:
        cache-environment: true
        cache-environment-key: env-key-${{ matrix.python-version }}
        condarc: |
          channel-priority: flexible
        environment-file: env.yml
        environment-name: anaconda-test-env-py-${{ matrix.python-version }}
        create-args: >-
          coveralls
          pytest
          pytest-cov
          pytest-qt
          python=${{ matrix.python-version }}
          setuptools-scm

    - name: Initial diagnostics
      run: |
        micromamba info
        micromamba list
        conda config --show-sources
        conda config --show
        micromamba env list
        printenv | sort

    - name: Install this package
      shell: bash -l {0}
      run: pip install --no-deps -e .

    - name: Run tests with pytest & coverage
      shell: bash -l {0}
      run: |
        coverage run --concurrency=thread --parallel-mode -m pytest -vvv --exitfirst .
        coverage combine
        coverage report --precision 3
        # pytest -vvv .

    # - name: Upload coverage data to coveralls.io
    #   shell: bash -l {0}
    #   run: |
    #     micromamba list coveralls
    #     which coveralls
    #     coveralls debug
    #     coveralls --service=github
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
    #     COVERALLS_PARALLEL: true

  # # https://coveralls-python.readthedocs.io/en/latest/usage/configuration.html#github-actions-support
  # coveralls:
  #   name: Report unit test coverage to coveralls
  #   needs: test-matrix
  #   runs-on: ubuntu-latest
  #   container: python:3-slim

  #   steps:
  #     - name: Gather coverage and report to Coveralls
  #       run: |
  #         echo "Finally!"
  #         pip3 install --upgrade coveralls
  #         # debug mode: output prepared json and reported files list to stdout
  #         # https://coveralls-python.readthedocs.io/en/latest/troubleshooting.html
  #         coveralls debug
  #         coveralls --service=github --finish
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
